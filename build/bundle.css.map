{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Emoji.svelte",
    "EmojiComponent.svelte",
    "EmojiDetails.svelte",
    "EmojiMashup.svelte",
    "EmojiMashupComponent.svelte",
    "EmojiMenu.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import EmojiDetails from \"./EmojiDetails.svelte\";\r\n  import EmojiMenu from \"./EmojiMenu.svelte\";\r\n  import EmojiMashup from \"./EmojiMashup.svelte\";\r\n\r\n  let selectedEmoji = null;\r\n  let components = [];\r\n\r\n  let a = 0;\r\n  function addComponent(c) {\r\n    console.log(\"yo\");\r\n    components = [\r\n      ...components,\r\n      {\r\n        svg: c,\r\n        transform: {},\r\n        a: a++,\r\n      },\r\n    ];\r\n    console.log(components);\r\n  }\r\n\r\n  function onMove(c, dir) {\r\n    const i = components.indexOf(c);\r\n    console.log(c, i);\r\n    if (i > -1) {\r\n      const t = i + (dir === \"up\" ? -1 : 1);\r\n      console.log(i, t);\r\n      if (t < 0 || t >= components.length) return;\r\n\r\n      const l = Math.min(t, i);\r\n      const u = Math.max(t, i);\r\n      const I = components[i];\r\n      const T = components[t];\r\n\r\n      console.log(l, u);\r\n\r\n      components = [\r\n        ...components.slice(0, l),\r\n        ...(t > i ? [T, I] : [I, T]),\r\n        ...components.slice(u + 1, components.length),\r\n      ];\r\n      console.log(components);\r\n    }\r\n  }\r\n\r\n  function onDelete(c) {\r\n    const i = components.indexOf(c);\r\n    console.log(c, i);\r\n    if (i > -1) {\r\n      components = [\r\n        ...components.slice(0, i),\r\n        ...components.slice(i + 1, components.length),\r\n      ];\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    padding: 1em;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  app {\r\n    display: flex;\r\n  }\r\n\r\n  a {\r\n    color: #444;\r\n  }\r\n  a:visited {\r\n    color: #888;\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <app>\r\n    <EmojiMenu\r\n      emojiClicked={(e) => {\r\n        console.log('clicked', e);\r\n        selectedEmoji = e;\r\n      }} />\r\n    <div>\r\n      <EmojiDetails\r\n        emoji={selectedEmoji}\r\n        componentClicked={(c) => {\r\n          addComponent(c);\r\n        }} />\r\n      <EmojiMashup {components} {onMove} {onDelete} />\r\n    </div>\r\n  </app>\r\n  <div>\r\n    <h3>\r\n      Built with\r\n      <a href=\"https://svelte.dev/\">Svelte\r\n        <svg\r\n          version=\"1.1\"\r\n          id=\"Layer_1\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n          x=\"0px\"\r\n          y=\"0px\"\r\n          viewBox=\"0 0 98.1 118\"\r\n          style=\"enable-background:new 0 0 98.1 118;height:30px;vertical-align:middle\"\r\n          xml:space=\"preserve\"><style type=\"text/css\">\r\n            .st0 {\r\n              fill: #ff3e00;\r\n            }\r\n            .st1 {\r\n              fill: #ffffff;\r\n            }\r\n          </style>\r\n          <path\r\n            class=\"st0\"\r\n            d=\"M91.8,15.6C80.9-0.1,59.2-4.7,43.6,5.2L16.1,22.8C8.6,27.5,3.4,35.2,1.9,43.9c-1.3,7.3-0.2,14.8,3.3,21.3\r\n\t\t\t\t\t\t\t\tc-2.4,3.6-4,7.6-4.7,11.8c-1.6,8.9,0.5,18.1,5.7,25.4c11,15.7,32.6,20.3,48.2,10.4l27.5-17.5c7.5-4.7,12.7-12.4,14.2-21.1\r\n\t\t\t\t\t\t\t\tc1.3-7.3,0.2-14.8-3.3-21.3c2.4-3.6,4-7.6,4.7-11.8C99.2,32.1,97.1,22.9,91.8,15.6\" />\r\n          <path\r\n            class=\"st1\"\r\n            d=\"M40.9,103.9c-8.9,2.3-18.2-1.2-23.4-8.7c-3.2-4.4-4.4-9.9-3.5-15.3c0.2-0.9,0.4-1.7,0.6-2.6l0.5-1.6l1.4,1\r\n\t\t\t\t\t\t\t\tc3.3,2.4,6.9,4.2,10.8,5.4l1,0.3l-0.1,1c-0.1,1.4,0.3,2.9,1.1,4.1c1.6,2.3,4.4,3.4,7.1,2.7c0.6-0.2,1.2-0.4,1.7-0.7L65.5,72\r\n\t\t\t\t\t\t\t\tc1.4-0.9,2.3-2.2,2.6-3.8c0.3-1.6-0.1-3.3-1-4.6c-1.6-2.3-4.4-3.3-7.1-2.6c-0.6,0.2-1.2,0.4-1.7,0.7l-10.5,6.7\r\n\t\t\t\t\t\t\t\tc-1.7,1.1-3.6,1.9-5.6,2.4c-8.9,2.3-18.2-1.2-23.4-8.7c-3.1-4.4-4.4-9.9-3.4-15.3c0.9-5.2,4.1-9.9,8.6-12.7l27.5-17.5\r\n\t\t\t\t\t\t\t\tc1.7-1.1,3.6-1.9,5.6-2.5c8.9-2.3,18.2,1.2,23.4,8.7c3.2,4.4,4.4,9.9,3.5,15.3c-0.2,0.9-0.4,1.7-0.7,2.6l-0.5,1.6l-1.4-1\r\n\t\t\t\t\t\t\t\tc-3.3-2.4-6.9-4.2-10.8-5.4l-1-0.3l0.1-1c0.1-1.4-0.3-2.9-1.1-4.1c-1.6-2.3-4.4-3.3-7.1-2.6c-0.6,0.2-1.2,0.4-1.7,0.7L32.4,46.1\r\n\t\t\t\t\t\t\t\tc-1.4,0.9-2.3,2.2-2.6,3.8s0.1,3.3,1,4.6c1.6,2.3,4.4,3.3,7.1,2.6c0.6-0.2,1.2-0.4,1.7-0.7l10.5-6.7c1.7-1.1,3.6-1.9,5.6-2.5\r\n\t\t\t\t\t\t\t\tc8.9-2.3,18.2,1.2,23.4,8.7c3.2,4.4,4.4,9.9,3.5,15.3c-0.9,5.2-4.1,9.9-8.6,12.7l-27.5,17.5C44.8,102.5,42.9,103.3,40.9,103.9\" />\r\n        </svg>\r\n      </a>\r\n    </h3>\r\n    <h4>Uses :</h4>\r\n    <ul>\r\n      <li><a href=\"https://twemoji.twitter.com/\">twemoji</a></li>\r\n      <li><a href=\"https://github.com/amio/emoji.json\">emoji.json</a></li>\r\n      <li>\r\n        <a href=\"https://github.com/Necktrox/discord-emoji\">discord-emoji</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</main>\r\n",
    "<script>\r\n  import get from \"./get.js\";\r\n  export let emoji;\r\n\r\n  export let emojiClicked;\r\n\r\n  let data = \"\";\r\n\r\n  function updateTitle(emoji) {\r\n    data = JSON.stringify(emoji, null, 4);\r\n  }\r\n\r\n  let svg = null;\r\n  let curReq = 0;\r\n  async function loadSvg(url) {\r\n    curReq++;\r\n    const draw = curReq;\r\n    const res = await get(url);\r\n    if (draw === curReq) {\r\n      svg = res;\r\n    }\r\n  }\r\n\r\n  $: loadSvg(emoji.url);\r\n  loadSvg(emoji.url);\r\n\r\n  $: updateTitle(emoji);\r\n  updateTitle(emoji);\r\n</script>\r\n\r\n<style>\r\n  .moji {\r\n    display: inline-block;\r\n  }\r\n\r\n  .moji > :global(svg) {\r\n    height: 20px;\r\n  }\r\n</style>\r\n\r\n<span class=\"moji\" title={data} on:click={(_) => emojiClicked({ emoji, svg })}>\r\n  {#if svg}\r\n    {@html svg}\r\n  {/if}\r\n</span>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  export let component;\r\n  export let componentClicked;\r\n\r\n  let container;\r\n\r\n  const updateSVG = (svg) => {\r\n    if (!container) return;\r\n    container.innerHTML = \"\";\r\n\r\n    if (svg) container.appendChild(svg);\r\n  };\r\n\r\n  onMount(() => {\r\n    updateSVG(component);\r\n  });\r\n  $: updateSVG(component);\r\n</script>\r\n\r\n<style>\r\n  div {\r\n    display: inline-block;\r\n    padding: 5px;\r\n    border-radius: 3px;\r\n    background: #f3f3f3;\r\n    margin: 5px;\r\n  }\r\n  .moji > :global(svg) {\r\n    height: 60px;\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"moji\"\r\n  bind:this={container}\r\n  on:click={(_) => componentClicked(component)} />\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import EmojiComponent from \"./EmojiComponent.svelte\";\r\n  import htmlToEl from \"./htmlToEl.js\";\r\n\r\n  export let emoji;\r\n  export let componentClicked;\r\n\r\n  let container;\r\n  let components = [];\r\n  let svg = null;\r\n\r\n  function updateSelected() {\r\n    console.log(\"updateSelected\");\r\n    svg = emoji ? htmlToEl(emoji.svg) : null;\r\n    updateSVG(svg);\r\n  }\r\n\r\n  function updateSVG(svg) {\r\n    console.log(\"updateSVG\");\r\n    if (!container) return;\r\n    container.innerHTML = \"\";\r\n    components = [];\r\n\r\n    if (svg) container.appendChild(svg);\r\n\r\n    for (const path of svg.querySelectorAll(\"path, circle, ellipse\")) {\r\n      const component = svg.cloneNode();\r\n      component.appendChild(path.cloneNode());\r\n      components.push(component);\r\n    }\r\n  }\r\n\r\n  $: updateSelected(emoji);\r\n  updateSelected(emoji);\r\n</script>\r\n\r\n<style>\r\n  div {\r\n    padding: 20px;\r\n  }\r\n  .moji > :global(svg) {\r\n    height: 100px;\r\n  }\r\n</style>\r\n\r\n<div>\r\n  <span class=\"moji\" bind:this={container} />\r\n  {#each components as component}\r\n    <EmojiComponent {component} {componentClicked} />\r\n  {/each}\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import EmojiMashupComponent from \"./EmojiMashupComponent.svelte\";\r\n\r\n  export let components;\r\n  export let onDelete;\r\n  export let onMove;\r\n  let container;\r\n  let selectedIndex;\r\n\r\n  const updateSVG = (components) => {\r\n    console.log(\"Update SVG\");\r\n    if (!container) return;\r\n    container.innerHTML = \"\";\r\n    let parent;\r\n    for (const c of components) {\r\n      console.log(\"Update SVG nodes\");\r\n      if (container.innerHTML === \"\") {\r\n        parent = c.svg.cloneNode();\r\n        container.appendChild(parent);\r\n      }\r\n      parent.appendChild(\r\n        c.svg.querySelector(\"path, circle, ellipse\").cloneNode()\r\n      );\r\n    }\r\n  };\r\n\r\n  function dl(filename, data) {\r\n    const link = document.createElement(\"a\");\r\n    link.download = filename;\r\n    link.style.display = \"none\";\r\n    document.body.append(link);\r\n    link.href = data;\r\n    link.click();\r\n    link.remove();\r\n  }\r\n\r\n  function getSVG() {\r\n    dl(\r\n      `mash.${Date.now()}.svg`,\r\n      \"data:image/svg+xml;base64,\\n\" + btoa(container.innerHTML)\r\n    );\r\n  }\r\n\r\n  function getPNG() {\r\n    const canvas = document.createElement(\"canvas\");\r\n    canvas.setAttribute(\"width\", 512);\r\n    canvas.setAttribute(\"height\", 512);\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const img = document.createElement(\"img\");\r\n    img.setAttribute(\r\n      \"src\",\r\n      \"data:image/svg+xml;base64,\\n\" + btoa(container.innerHTML)\r\n    );\r\n    img.setAttribute(\"width\", 512);\r\n    img.setAttribute(\"height\", 512);\r\n\r\n    img.onload = function () {\r\n      ctx.drawImage(img, 0, 0);\r\n\r\n      // Now is done\r\n      console.log(canvas.toDataURL(\"image/png\"));\r\n      dl(`mash.${Date.now()}.png`, canvas.toDataURL(\"image/png\"));\r\n    };\r\n  }\r\n\r\n  onMount(() => {\r\n    updateSVG(components);\r\n  });\r\n\r\n  $: updateSVG(components);\r\n</script>\r\n\r\n<style>\r\n  .container {\r\n    padding: 20px;\r\n  }\r\n  .editor {\r\n    display: flex;\r\n  }\r\n  .moji > :global(svg) {\r\n    height: 200px;\r\n  }\r\n  .mashup {\r\n    padding: 20px;\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <div class=\"editor\">\r\n    <div>\r\n      <h5>Components:</h5>\r\n      {#each components as component, index}\r\n        <EmojiMashupComponent\r\n          {component}\r\n          {selectedIndex}\r\n          {index}\r\n          componentClicked={(_) => (selectedIndex = index)}\r\n          onMove={(dir) => onMove(component, dir)}\r\n          onDelete={(_) => onDelete(component)} />\r\n      {/each}\r\n    </div>\r\n    <div class=\"mashup\"><span class=\"moji\" bind:this={container} /></div>\r\n  </div>\r\n  <button\r\n    style={'display:' + (components.length > 0 ? 'inline-block' : 'none')}\r\n    on:click={(_) => getSVG()}>Download SVG</button>\r\n  <button\r\n    style={'display:' + (components.length > 0 ? 'inline-block' : 'none')}\r\n    on:click={(_) => getPNG()}>Download PNG</button>\r\n</div>\r\n",
    "<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  export let component;\r\n  export let componentClicked;\r\n  export let index;\r\n  export let selectedIndex;\r\n  export let onDelete;\r\n  export let onMove;\r\n\r\n  let container;\r\n\r\n  const updateSVG = (svg) => {\r\n    console.log(svg);\r\n    if (!container) return;\r\n    container.innerHTML = \"\";\r\n\r\n    if (svg) container.appendChild(svg.cloneNode(true));\r\n  };\r\n\r\n  onMount(() => {\r\n    updateSVG(component.svg);\r\n  });\r\n  $: updateSVG(component.svg);\r\n</script>\r\n\r\n<style>\r\n  :global(.selected).container {\r\n    border: 1px solid red;\r\n    padding: 4px !important;\r\n  }\r\n  .container {\r\n    width: 150px;\r\n    padding: 5px;\r\n    border-radius: 3px;\r\n    background: #f3f3f3;\r\n    margin: 5px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  .moji {\r\n    display: inline-block;\r\n    flex-grow: 1;\r\n    height: 30px;\r\n  }\r\n  .moji > :global(svg) {\r\n    height: 30px;\r\n  }\r\n  button {\r\n    border-radius: 2px;\r\n    border-width: 0;\r\n    background: #ccc;\r\n    width: 24px;\r\n    height: 24px;\r\n    padding: 0;\r\n    margin: 0 5px;\r\n  }\r\n</style>\r\n\r\n<div\r\n  class=\"container\"\r\n  class:selected={index === selectedIndex}\r\n  on:click={componentClicked}>\r\n  <div\r\n    class=\"moji\"\r\n    bind:this={container}\r\n    on:click={(_) => componentClicked(component)} />\r\n  <button on:click={(_) => onMove('up')}>🔺</button>\r\n  <button on:click={(_) => onMove('down')}>🔻</button>\r\n  <button on:click={(_) => onDelete()}>❌</button>\r\n</div>\r\n",
    "<script>\r\n  import twemoji from \"twemoji\";\r\n  import emojiJson from \"emoji.json\";\r\n  import EmojiGroup from \"./EmojiGroup.svelte\";\r\n  import demoji from \"discord-emoji\";\r\n\r\n  export let emojiClicked;\r\n\r\n  const discordMap = {};\r\n\r\n  for (const [groupName, group] of Object.entries(demoji)) {\r\n    for (const [name, emoji] of Object.entries(group)) {\r\n      discordMap[emoji] = name;\r\n    }\r\n  }\r\n\r\n  const emojiCats = {};\r\n  for (const emoji of emojiJson) {\r\n    if (!emojiCats[emoji.group]) emojiCats[emoji.group] = [];\r\n    emojiCats[emoji.group].push({\r\n      twemoji: twemoji.parse(emoji.char, {\r\n        folder: \"svg\",\r\n        ext: \".svg\",\r\n      }),\r\n      emoji,\r\n      discordName: discordMap[emoji.char],\r\n      url:\r\n        \"https://cdn.jsdelivr.net/gh/twitter/twemoji@14.0.2/assets/svg/\" +\r\n        twemoji.convert.toCodePoint(emoji.char) +\r\n        \".svg\",\r\n    });\r\n  }\r\n\r\n  let search = \"\";\r\n</script>\r\n\r\n<menu>\r\n  <input bind:value={search} />\r\n  {#each Object.keys(emojiCats) as k}\r\n    <EmojiGroup emojiGroup={emojiCats[k]} name={k} {search} {emojiClicked} />\r\n  {/each}\r\n</menu>\r\n\r\n<style>\r\n  menu {\r\n    width: 300px;\r\n    border: 1px solid #ccc;\r\n    padding: 1em;\r\n    border-radius: 3px;\r\n  }\r\n\r\n  input {\r\n    width: 100%;\r\n  }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "AA2DE,IAAI,cAAC,CAAC,AACJ,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,AACf,CAAC,AAED,CAAC,cAAC,CAAC,AACD,KAAK,CAAE,IAAI,AACb,CAAC,AACD,eAAC,QAAQ,AAAC,CAAC,AACT,KAAK,CAAE,IAAI,AACb,CAAC;AC1CD,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,YAAY,AACvB,CAAC,AAED,mBAAK,CAAW,GAAG,AAAE,CAAC,AACpB,MAAM,CAAE,IAAI,AACd,CAAC;ACfD,GAAG,eAAC,CAAC,AACH,OAAO,CAAE,YAAY,CACrB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,AACb,CAAC,AACD,oBAAK,CAAW,GAAG,AAAE,CAAC,AACpB,MAAM,CAAE,IAAI,AACd,CAAC;ACOD,GAAG,eAAC,CAAC,AACH,OAAO,CAAE,IAAI,AACf,CAAC,AACD,oBAAK,CAAW,GAAG,AAAE,CAAC,AACpB,MAAM,CAAE,KAAK,AACf,CAAC;ACgCD,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,IAAI,AACf,CAAC,AACD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,AACf,CAAC,AACD,mBAAK,CAAW,GAAG,AAAE,CAAC,AACpB,MAAM,CAAE,KAAK,AACf,CAAC,AACD,OAAO,cAAC,CAAC,AACP,OAAO,CAAE,IAAI,AACf,CAAC;AC3DO,SAAS,AAAC,UAAU,AAAC,CAAC,AAC5B,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CACrB,OAAO,CAAE,GAAG,CAAC,UAAU,AACzB,CAAC,AACD,UAAU,cAAC,CAAC,AACV,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,AAChC,CAAC,AACD,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,YAAY,CACrB,SAAS,CAAE,CAAC,CACZ,MAAM,CAAE,IAAI,AACd,CAAC,AACD,mBAAK,CAAW,GAAG,AAAE,CAAC,AACpB,MAAM,CAAE,IAAI,AACd,CAAC,AACD,MAAM,cAAC,CAAC,AACN,aAAa,CAAE,GAAG,CAClB,YAAY,CAAE,CAAC,CACf,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CAAC,GAAG,AACf,CAAC;ACbD,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,OAAO,CAAE,GAAG,CACZ,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,AACb,CAAC"
}